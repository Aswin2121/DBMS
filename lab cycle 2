Consider the following Database Schema
1. Find all employees who locate in the location with the id 1700.
2. Find all employees who do not locate at the location 1700.
3. Finds the employees who have the highest salary.
4. Finds all employees who salaries are greater than the average salary of all employees.
5. Finds all departments (Department Id, Name) which have at least one employee with
the salary is greater than 10,000.
6. Finds all departments (Department Id, Name) that do not have any employee with the
salary greater than 10,000.
7. Finds all employees whose salaries are greater than the lowest salary of every
department.
8. Finds all employees whose salaries are greater than or equal to the highest salary of
every department.
9. Calculate the average of average salary of departments. (Hint: SQL subquery in the
FROM clause)
10. Finds the salaries of all employees, their average salary, and the difference between the
salary of each employee and the average salary. (Hint: SQL Subquery in the SELECT
clause)
11. Finds all employees whose salary is higher than the average salary of the employees in
their departments. (Hint : Use Correlated Subquery).
12. Returns all employees who have no dependents.
13. Display first name, last name, department name of employees of the Department with
id 1, 2 and 3.
14. Display the first name, last name, job title, and department name of employees who
work in department with id 1, 2, and 3 and salary greater than 10000.
15. Display Department name, street address, postal code, country name and region name
of all departments.
16. Write a SQL query to find out which employees have or do not have a department.
Return first name, last name, department ID, department name.
17. Write a SQL query to find those employees whose first name contains the letter ‘Z’.
Return first name, last name, department, city, and state province.
18. Write a SQL query to find all departments, including those without employees Return
first name, last name, department ID, department name


ChatGPT
Here are the SQL queries for each of the tasks:

sql
Copy code
SELECT * FROM employees WHERE location_id = 1700;

sql
Copy code

2. ```sql
SELECT * FROM employees WHERE location_id != 1700;
sql
Copy code
SELECT * FROM employees WHERE salary = (SELECT MAX(salary) FROM employees);

sql
Copy code

4. ```sql
SELECT * FROM employees WHERE salary > (SELECT AVG(salary) FROM employees);
sql
Copy code
SELECT departments.department_id, departments.department_name
FROM departments
WHERE EXISTS (SELECT * FROM employees WHERE employees.department_id = departments.department_id AND salary > 10000);

sql
Copy code

6. ```sql
SELECT departments.department_id, departments.department_name 
FROM departments 
WHERE NOT EXISTS (SELECT * FROM employees WHERE employees.department_id = departments.department_id AND salary > 10000);
sql
Copy code
SELECT *
FROM employees
WHERE salary > (SELECT MIN(salary) FROM employees GROUP BY department_id);

sql
Copy code

8. ```sql
SELECT * 
FROM employees 
WHERE salary >= (SELECT MAX(salary) FROM employees GROUP BY department_id);
sql
Copy code
SELECT AVG(avg_salary)
FROM (SELECT AVG(salary) as avg_salary FROM employees GROUP BY department_id) as department_avg_salary;

sql
Copy code

10. ```sql
SELECT first_name, last_name, salary, 
(SELECT AVG(salary) FROM employees) as avg_salary, 
salary - (SELECT AVG(salary) FROM employees) as salary_difference 
FROM employees;